- en: Exercise 26. Dictionaries and Modules
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习 26. 字典和模块
- en: In this exercise you’re going to explore how the `dict` works with modules.
    You’ve been using modules any time you use `import` to add “features” to your
    own Python source. You did this the most in [Exercise 17](ch17.xhtml#ch17), so
    it might be good to go review that exercise before you begin this one.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，你将探索`dict`如何与模块一起工作。每当你使用`import`将“功能”添加到你自己的Python源代码时，你都在使用模块。你在[练习
    17](ch17.xhtml#ch17)中使用得最多，所以在开始这个练习之前，最好回顾一下那个练习。
- en: 'Step 1: Review of `import`'
  id: totrans-2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '步骤 1: `import`的回顾'
- en: 'The first step is review how `import` works and develop that knowledge further.
    Take some time to enter this code into a Python file named `ex26.py`. You can
    do this in Jupyter by creating a file (left side, blue `[+]` button) with that
    name:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是回顾`import`的工作方式并进一步发展这方面的知识。花点时间将这段代码输入到一个名为`ex26.py`的Python文件中。你可以在Jupyter中通过创建一个文件（左侧，蓝色`[+]`按钮）来做到这一点：
- en: 'Listing 26.1: ex26.py'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '列表 26.1: ex26.py'
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Once you’ve created this file you can import it with this:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 创建了这个文件后，你可以用这个导入它：
- en: 'Listing 26.2: ex26_code.py'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '列表 26.2: ex26_code.py'
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This will bring the contents of `ex26.py` into your Jupyter lab so you can
    access them like this:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这将把`ex26.py`的内容带入你的Jupyter lab中，这样你就可以像这样访问它们：
- en: 'Listing 26.3: ex26_code.py'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '列表 26.3: ex26_code.py'
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Take some time to play with this as much as possible. Try adding new variables
    and doing the import again to see how that works.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 尽可能多地尝试玩这个。尝试添加新变量并再次导入以查看其工作原理。
- en: 'Step 2: Find the `__dict__`'
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '步骤 2: 找到`__dict__`'
- en: 'Once you understand that the `import` is the contents of `ex26.py` to your
    lab, you can start investigating the `__dict__` variable like this:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你理解了`import`是将`ex26.py`的内容导入到你的lab中，你就可以开始像这样调查`__dict__`变量：
- en: 'Listing 26.4: ex26_code.py'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '列表 26.4: ex26_code.py'
- en: '[PRE3]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `pprint` function is a “pretty printer” that will print the `__dict__` in
    a better format.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '`pprint`函数是一个“漂亮打印机”，将以更好的格式打印`__dict__`。'
- en: With `pprint` you suddenly see that `ex26` has a “hidden” variable called `__dict__`,
    which is *literally* a `dict` that contains everything in the module. You’ll find
    this `__dict__` and many other secret variables all over Python. The contents
    of `__dict__` contain quite a few things that aren’t your code, but that’s simply
    things Python needs to work with the module.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`pprint`，你会突然发现`ex26`有一个名为`__dict__`的“隐藏”变量，它*实际上*是一个包含模块中所有内容的`dict`。你会在Python中的各个地方找到这个`__dict__`和许多其他秘密变量。`__dict__`的内容包含了许多不是你的代码的东西，但这只是Python需要处理模块的东西。
- en: 'These variables are so hidden that even top professionals forget they exist.
    Many of these programmers believe that a module is *totally* different from a
    `dict` when internally a module uses a `__dict__`, which means it *is* the same
    as a `dict`. The only difference is Python has some syntax that lets you access
    a module using the `.` operator instead of the `dict` syntax, but you *can* still
    access the contents as a dict:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这些变量是如此隐藏，以至于即使顶级专业人员也会忘记它们的存在。许多这样的程序员认为模块与`dict`*完全*不同，而实际上模块使用了`__dict__`，这意味着它*与*`dict`相同。唯一的区别是Python有一些语法，让你使用`.`运算符而不是`dict`语法来访问模块，但你*仍然*可以像访问`dict`一样访问内容：
- en: 'Listing 26.5: ex26_code.py'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '列表 26.5: ex26_code.py'
- en: '[PRE4]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: You’ll get the same output for both syntaxes, but the `.` module syntax is definitely
    easier.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这两种语法，你会得到相同的输出，但`.`模块语法肯定更容易。
- en: 'Step 3: Change the `__dict__`'
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '步骤 3: 改变`__dict__`'
- en: 'If a module is really a `dict` inside, then that means changing the contents
    of `__dict__` should also change the variables in the module. Let’s try it:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个模块确实是内部的`dict`，那么这意味着改变`__dict__`的内容也应该改变模块中的变量。让我们试一试：
- en: 'Listing 26.6: ex26_code.py'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '列表 26.6: ex26_code.py'
- en: '[PRE5]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As you can see, the variable `ex26.height` changes when you change `ex26.__dict__['height']`,
    which proves that the module is really the `__dict__`.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，当你改变`ex26.__dict__['height']`时，变量`ex26.height`也会改变，这证明了模块确实是`__dict__`。
- en: 'This means that the `.` operator is being translated into a `__dict__[]` access
    operation. I want you to remember this for later, because many times when beginning
    programmers see `ex26.height`, they think this is a single unit of code. It is
    actually three or four separate operations:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着`.`运算符被转换为`__dict__[]`访问操作。我希望你记住这一点，因为很多初学者看到`ex26.height`时，他们认为这是一个单独的代码单元。实际上，这实际上是三个或四个单独的操作：
- en: 1\. Find `ex26`.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 找到`ex26`。
- en: 2\. Find the `ex26.__dict__`.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 找到`ex26.__dict__`。
- en: 3\. Index into `__dict__` with `"height"`.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 使用`"height"`索引到`__dict__`。
- en: 4\. Return that value.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 返回该值。
- en: Once you make this connection you’ll start to understand how the `.` works.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你建立了这种联系，你就会开始理解`.`是如何工作的。
- en: 'Study Drill: Find the “Dunders”'
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 学习练习：找到“Dunders”
- en: The `__dict__` variables are typically called “double underscore” variables,
    but programmers are a lazy bunch so we just call them “dunder variables.” For
    this final step in learning about dunder variables you’ll visit the Python documentation
    for the data model, which describes how many of these dunders are used.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`__dict__` 变量通常被称为“双下划线”变量，但程序员们很懒，所以我们只是称它们为“dunder 变量”。在学习关于 dunder 变量的最后一步中，你将访问
    Python 文档中描述数据模型的部分，其中描述了许多这些 dunder 的用法。'
- en: 'This is a large document, and its writing style is very dry, so the best way
    to study it is search for `__` (double underscore) and then find a way to access
    this variable based on its description. For example, you can try to access the
    `__doc__` on almost anything:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个很大的文档，其写作风格非常枯燥，所以最好的学习方法是搜索`__`（双下划线），然后根据其描述找到访问这个变量的方法。例如，你可以尝试在几乎任何地方访问`__doc__`：
- en: 'Listing 26.7: ex26_code.py'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '列表 26.7: ex26_code.py'
- en: '[PRE6]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'That will give you a little bit of documentation attached to the `pprint` function.
    You can access the same information using the `help` function:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这将为你提供与`pprint`函数相关联的一点文档。你可以使用`help`函数访问相同的信息：
- en: 'Listing 26.8: ex26_code.py'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '列表 26.8: ex26_code.py'
- en: '[PRE7]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Try these experiments with all of the other dunders you can find. You most likely
    won’t ever use them directly, but it’s good to know how Python’s internals work.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试用你能找到的所有其他 dunder 进行这些实验。你很可能不会直接使用它们，但了解 Python 内部工作原理是很有好处的。
